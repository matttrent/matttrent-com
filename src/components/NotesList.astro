---
import { getCollection, type CollectionEntry } from "astro:content";
import { groupAndSortByDate } from "../utils/dateGrouping";

type Note = CollectionEntry<"notes">;

// Get all non-draft notes
const allNotes = await getCollection("notes", ({ data }: Note) => {
  return import.meta.env.PROD ? data.isDraft !== true : true;
});

const sortedYearGroups = groupAndSortByDate(allNotes, {
  groupKey: (note: Note) => note.data.date.getFullYear(),
  sortKey: (note: Note) => note.data.date,
});
---

{
  allNotes.length > 0 && (
    <section>
      <h2>Notes</h2>
      <dl class="dl-horizontal">
        {sortedYearGroups.map(([year, notes]) => (
          <>
            <dt>{year}</dt>
            {notes.map((note) => (
              <dd>
                <a href={`/notes/${note.slug}`}>{note.data.title}</a>
                {note.data.isDraft && " (draft)"}
              </dd>
            ))}
          </>
        ))}
      </dl>
    </section>
  )
}
