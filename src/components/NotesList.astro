---
import { getCollection, type CollectionEntry } from "astro:content";
import { groupAndSortByDate } from "@utils/dateGrouping";

type Note = CollectionEntry<"notes">;

// Get all non-draft notes
const allNotes = await getCollection("notes", ({ data }: Note) => {
  return import.meta.env.PROD ? data.isDraft !== true : true;
});

const sortedYearGroups = groupAndSortByDate(allNotes, {
  groupKey: (note: Note) => note.data.createdAt.getFullYear(),
  sortKey: (note: Note) => note.data.createdAt,
});
---

<dl class="dl-horizontal">
  {
    sortedYearGroups.map(([year, notes]) => (
      <>
        <dt>{year}</dt>
        {notes.map((note) => (
          <dd>
            <a href={`/notes/${note.slug}`}>{note.data.title}</a>
            {note.data.isDraft && " (draft)"}
          </dd>
        ))}
      </>
    ))
  }
</dl>

<style>
  dl {
    font-size: 1.4rem;
    line-height: 1.2em;
    -webkit-padding-end: 5%;
  }

  dt,
  dd {
    padding: 0.5rem 0;
  }

  dt {
  }

  dd {
    margin-left: 0;
  }

  .dl-horizontal dt {
    float: left;
    width: 50px; /* custom, orig 160px */
    overflow: hidden;
    clear: left;
    text-align: right;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-size: 1.2rem; /* custom, added */
  }
  .dl-horizontal dd {
    margin-left: 70px; /* custom, orig 180px */
  }

  .dl-horizontal-wide dt {
    float: left;
    width: 80px; /* custom, orig 160px */
    overflow: hidden;
    clear: left;
    text-align: right;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-size: 1.2rem; /* custom, added */
  }

  .dl-horizontal-wide dd {
    margin-left: 100px; /* custom, orig 180px */
  }

  dl dt {
    font-family: "Gill Sans", "Gill Sans MT", Calibri, sans-serif;
  }
</style>
