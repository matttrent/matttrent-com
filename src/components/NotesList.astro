---
import { getCollection, type CollectionEntry } from "astro:content";
import { groupAndSortByDate } from "@utils/dateGrouping";

import "@css/shared.css";
import "@css/deflist.css";

type Note = CollectionEntry<"notes">;

// Get all non-draft notes
const allNotes = await getCollection("notes", ({ data }: Note) => {
  return import.meta.env.PROD ? data.isDraft !== true : true;
});

const sortedYearGroups = groupAndSortByDate(allNotes, {
  groupKey: (note: Note) => note.data.createdAt.getFullYear(),
  sortKey: (note: Note) => note.data.createdAt,
});
---

<dl class="dl-horizontal">
  {
    sortedYearGroups.map(([year, notes]) => (
      <>
        <dt>{year}</dt>
        {notes.map((note) => (
          <dd>
            <a href={`/notes/${note.slug}`}>{note.data.title}</a>
            {note.data.isDraft && " (draft)"}
          </dd>
        ))}
      </>
    ))
  }
</dl>

  